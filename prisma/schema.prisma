// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users table for authentication and authorization
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      Role     @default(VIEWER)
  isActive  Boolean  @default(true)
  lastLogin DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  activities Activity[]
  projects   Project[] // Projects created by this user

  @@map("users")
}

enum Role {
  ADMIN
  MANAGER
  VIEWER
}

// Projects table for real estate projects
model Project {
  id          Int           @id @default(autoincrement())
  name        String
  location    String
  description String
  price       String
  area        String
  bedrooms    Int?
  bathrooms   Int?
  status      ProjectStatus @default(AVAILABLE)
  image       String
  features    String[] // Array of features
  
  // Map positioning
  x           Float
  y           Float
  
  // Metadata
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  createdBy   Int
  
  // Relations
  creator     User          @relation(fields: [createdBy], references: [id])
  views       ProjectView[]
  activities  Activity[]

  @@map("projects")
}

enum ProjectStatus {
  AVAILABLE
  SOLD
  COMING_SOON
}

// Project views for analytics
model ProjectView {
  id        Int      @id @default(autoincrement())
  projectId Int
  viewedAt  DateTime @default(now())
  ipAddress String?
  userAgent String?
  
  // Relations
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("project_views")
}

// Map settings
model MapSettings {
  id                Int     @id @default(autoincrement())
  backgroundImage   String
  theme             String  @default("dark")
  defaultZoom       Int     @default(12)
  centerLat         Float   @default(24.7136)
  centerLng         Float   @default(46.6753)
  
  // Visual settings
  brightness        Float   @default(0.9)
  contrast          Float   @default(1.1)
  saturation        Float   @default(1.0)
  
  // Marker settings
  showLabels        Boolean @default(true)
  enableAnimation   Boolean @default(true)
  clusterMarkers    Boolean @default(false)
  
  // Performance settings
  lazyLoading       Boolean @default(true)
  imageCompression  Boolean @default(true)
  preloadAssets     Boolean @default(false)
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("map_settings")
}

// Theme/Design system settings
model ThemeSettings {
  id           Int      @id @default(autoincrement())
  name         String   @unique @default("default")
  
  // Colors (stored as JSON)
  colors       Json
  
  // Typography
  fontFamily   String   @default("Inter, system-ui, sans-serif")
  typography   Json     // fontSize, fontWeight, lineHeight
  
  // Spacing
  spacing      Json
  
  // Border radius
  borderRadius Json
  
  // Shadows
  shadows      Json
  
  // Animations
  animations   Json
  
  // Components
  components   Json
  
  isActive     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("theme_settings")
}

// Activity log for audit trail
model Activity {
  id          Int      @id @default(autoincrement())
  action      String
  description String?
  userId      Int?
  projectId   Int?
  metadata    Json?    // Additional data
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())
  
  // Relations
  user        User?    @relation(fields: [userId], references: [id])
  project     Project? @relation(fields: [projectId], references: [id])

  @@map("activities")
}

// Analytics data
model Analytics {
  id               Int      @id @default(autoincrement())
  date             DateTime @default(now()) @db.Date
  totalViews       Int      @default(0)
  uniqueVisitors   Int      @default(0)
  conversionRate   Float    @default(0)
  avgTimeOnSite    Int      @default(0) // in seconds
  bounceRate       Float    @default(0)
  popularProjects  Json     // Array of {projectId, views}
  trafficSources   Json     // Traffic source data
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([date])
  @@map("analytics")
}

// System settings
model SystemSettings {
  id                    Int      @id @default(autoincrement())
  siteName              String   @default("VERSE Real Estate")
  siteDescription       String   @default("Premium real estate platform in Saudi Arabia")
  contactEmail          String   @default("contact@verse.sa")
  phoneNumber           String   @default("+966 50 123 4567")
  address               String   @default("King Fahd Road, Riyadh, Saudi Arabia")
  
  // Feature flags
  enableNotifications   Boolean  @default(true)
  enableAnalytics       Boolean  @default(true)
  enableCaching         Boolean  @default(true)
  maintenanceMode       Boolean  @default(false)
  allowGuestViewing     Boolean  @default(true)
  requireApproval       Boolean  @default(false)
  autoBackup            Boolean  @default(true)
  
  // Configuration
  maxProjectsPerPage    Int      @default(12)
  backupFrequency       String   @default("daily")
  language              String   @default("en")
  timezone              String   @default("Asia/Riyadh")
  currency              String   @default("SAR")
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("system_settings")
}

// Backup logs
model BackupLog {
  id          Int      @id @default(autoincrement())
  filename    String
  size        BigInt
  status      String   // SUCCESS, FAILED, IN_PROGRESS
  message     String?
  createdAt   DateTime @default(now())

  @@map("backup_logs")
}
